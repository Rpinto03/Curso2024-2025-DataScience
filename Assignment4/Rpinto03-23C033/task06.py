# -*- coding: utf-8 -*-
"""Task06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JnAVIfwPDtihRzDMuL0GMwKlOINXGIlU

**Task 06: Modifying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.1: Create a new class named "University"**

"""

# TO DO
ns = Namespace("http://somewhere#")
g.add((ns.University, RDF.type, RDFS.Class))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

# TO DO
g.add((ns.Researcher, RDFS.subClassOf, ns.Person))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smithers"**"""

# TO DO
g.add((ns.JaneSmithers, RDF.type, ns.Researcher))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.4: Add to the individual JaneSmithers the email address, fullName, given and family names. Use the https://schema.org vocabulary**"""

# TO DO
SCHEMA = Namespace("http://schema.org/")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0")
g.add((ns.JaneSmithers, VCARD.FN, Literal("Jane Smithers")))
g.add((ns.JaneSmithers, SCHEMA.email, Literal("jsmithers@example.org")))
g.add((ns.JaneSmithers, VCARD.Given, Literal("Jane")))
g.add((ns.JaneSmithers, VCARD.Family, Literal("Smithers"))) # He usado el Given y Family de VCARD en vez de el givenName de schema.org porque en los ejemplos utiliza el de vcard.
# Visualize the results
for t in g.triples((ns.JaneSmithers, None, None)):
  print(t)

"""**TASK 6.5: Add UPM as the university where John Smith works. Use the "https://example.org/ namespace**"""

from re import S
# TO DO
ex = Namespace("https://example.org/")
g.add((ex.UPM, RDF.type, ns.University))
g.add((ns.JohnSmith, SCHEMA.worksFor, ex.UPM))
# Visualize the results
for t in g.triples((ex.UPM, RDF.type, None)):
  print(t)
for i in g.triples((ns.JohnSmith, SCHEMA.worksFor, None)):
  print(i)

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary. Make sure the relationship exists.**"""

# TO DO
FOAF = Namespace("http://xmlns.com/foaf/0.1/")
g.add((ns.JohnSmith, FOAF.knows, ns.JaneSmithers))
# Visualize the results
for t in g.triples((None, FOAF.knows, None)):
  print(t)